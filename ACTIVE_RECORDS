
ACTIVE RECORDS

 - Active record is an approach to accessing data in a database. A database table or view is wrapped into a class.
 - Thus, an object instance is tied to a single row in the table. After creation of an object, a new row is added to the table upon save.
 - Any object loaded gets its information from the database. When an object is updated the corresponding row in the table is also updated.
 - The wrapper class implements accessor methods or properties for each column in the table or view. 


 Creation Of a class for a table

  class Base1 < ActiveRecord::Base
    self.table_name = "base"
  end


 Active Record pattern is implemented in the class Part, the pseudo-code

  # part = new Part()
    part.name = "Sample part"
    part.price = 123.45
    part.save()

         will create a new row in the parts table with the given values, and is roughly equivalent to the SQL command

    INSERT INTO parts (name, price) VALUES ('Sample part', 123.45);

  

  # b = Part.find_first("name", "gearbox")

         This will find a new Part object based on the first matching row from the parts table whose name column has the value "gearbox". The SQL command used might be similar to the following, depending o         n the SQL implementation details of the database:

    SELECT * FROM parts WHERE name = 'gearbox' LIMIT 1; 

  # 
